<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

    <!-- Set this to true if you enable server-side prerendering -->
    <BuildServerSideRenderer>false</BuildServerSideRenderer>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AutoMapper" Version="9.0.0" />
    <PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="7.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="3.0.0" />
    <PackageReference Include="Microsoft.SqlServer.Types" Version="14.0.1016.290" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="3.0.0" />
    <PackageReference Include="System.Data.SqlClient" Version="4.7.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\app\nav-menu\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\app\nav-menu\**" />
    <EmbeddedResource Remove="ClientApp\src\app\nav-menu\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\app\nav-menu\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Migrations\20191024153556_Init.cs" />
    <Compile Remove="Migrations\20191024153556_Init.Designer.cs" />
    <Compile Remove="Migrations\20191024154322_Init.cs" />
    <Compile Remove="Migrations\20191024154322_Init.Designer.cs" />
    <Compile Remove="Migrations\20191024182525_Init.cs" />
    <Compile Remove="Migrations\20191024182525_Init.Designer.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\app\common.ts" />
    <None Remove="ClientApp\src\app\eshop\blades\blade-header.component.css" />
    <None Remove="ClientApp\src\app\eshop\blades\blade-header.component.html" />
    <None Remove="ClientApp\src\app\eshop\blades\blade-header.component.ts" />
    <None Remove="ClientApp\src\app\eshop\blades\category\category-body.component.ts" />
    <None Remove="ClientApp\src\app\eshop\blades\goodedit\good-edit-body.component.html" />
    <None Remove="ClientApp\src\app\eshop\blades\goodedit\good-edit-body.component.ts" />
    <None Remove="ClientApp\src\app\eshop\blades\goodedit\good-edit-resetmodal.component.html" />
    <None Remove="ClientApp\src\app\eshop\blades\goodedit\good-edit-resetmodal.component.ts" />
    <None Remove="ClientApp\src\app\eshop\blades\goodlist\good-edit-confirmdeletemodal.component.html" />
    <None Remove="ClientApp\src\app\eshop\blades\goodlist\good-edit-confirmdeletemodal.component.ts" />
    <None Remove="ClientApp\src\app\eshop\blades\goodlist\good-list-body.component.html" />
    <None Remove="ClientApp\src\app\eshop\blades\goodlist\good-list-body.component.ts" />
    <None Remove="ClientApp\src\app\eshop\category.component.ts" />
    <None Remove="ClientApp\src\app\eshop\good-edit-header.component.html" />
    <None Remove="ClientApp\src\app\eshop\good-edit-header.component.ts" />
    <None Remove="ClientApp\src\app\eshop\good-edit.component.html" />
    <None Remove="ClientApp\src\app\eshop\good-edit.component.ts" />
    <None Remove="ClientApp\src\app\eshop\good-list-header.component.html" />
    <None Remove="ClientApp\src\app\eshop\good-list-header.component.ts" />
    <None Remove="ClientApp\src\app\eshop\good-list.component.html" />
    <None Remove="ClientApp\src\app\eshop\good-list.component.ts" />
    <None Remove="ClientApp\src\app\interceptors\loader.interceptor.ts" />
    <None Remove="ClientApp\src\app\loader\loader.component.ts" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.css" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.html" />
    <None Remove="ClientApp\src\app\nav-menu\nav-menu.component.ts" />
    <None Remove="ClientApp\src\app\services\data.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\app\common.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\blade-header.component.css">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\blade-header.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\category\category-body.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodedit\good-edit-body.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodedit\good-edit-body.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodedit\good-edit-resetmodal.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodedit\good-edit-resetmodal.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodedit\good-edit.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodlist\good-list-body.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodlist\good-list-body.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\blade-header.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\interceptors\loader.interceptor.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\loader\loader.component.ts">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\model.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\category\category.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodedit\good-edit.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodlist\good-list.component.html">
      <SubType>Code</SubType>
    </TypeScriptCompile>
    <TypeScriptCompile Include="ClientApp\src\app\eshop\blades\goodlist\good-list.component.ts" />
    <TypeScriptCompile Include="ClientApp\src\app\services\data.service.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\src\assets\twitter-logo.png">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="StaticFiles\Images\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
